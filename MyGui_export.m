function varargout = MyGui_export(varargin)gui_Singleton = 1;gui_State = struct('gui_Name',       mfilename, ...                   'gui_Singleton',  gui_Singleton, ...                   'gui_OpeningFcn', @MyGui_export_OpeningFcn, ...                   'gui_OutputFcn',  @MyGui_export_OutputFcn, ...                   'gui_LayoutFcn',  @MyGui_export_LayoutFcn, ...                   'gui_Callback',   []);if nargin && ischar(varargin{1})    gui_State.gui_Callback = str2func(varargin{1});endif nargout    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});else    gui_mainfcn(gui_State, varargin{:});end% End initialization code - DO NOT EDIT% --- Executes just before MyGui_export is made visible.function MyGui_export_OpeningFcn(hObject, eventdata, handles, varargin)handles.output = hObject;% Update handles structureguidata(hObject, handles);% UIWAIT makes MyGui_export wait for user response (see UIRESUME)% uiwait(handles.figure1);%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------function varargout = MyGui_export_OutputFcn(hObject, eventdata, handles)% varargout  cell array for returning output args (see VARARGOUT);% hObject    handle to figure% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)% Get default command line output from handles structurevarargout{1} = handles.output;%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% % % Function Names                  Image input      image used for computation          image out put% % % exit fn                         -                       -                               -% % % load fn                         imagen0        imagen0                                imagen0% % %% % % crop fn                         imagen0        imagen0                                imagen0% % %% % % rotate fn                       imagen0        imagen0                                imagen0% % %% % % save org imagen_0               imagen0        imagen1=imagen0;imagen2=imagen1        imagen2% % %% % % grey2 black& White              imagen2        imagen3                                imagen3% % %% % % noise removal                   imagen3        imagen4                                imagen5% % %% % % extract OCR                     imagen5        imagen5% --- Exit button button5function pushbutton5_Callback(hObject, eventdata, handles)% hObject    handle to pushbutton5 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)%cla(handles.axes1,'reset');cla(handles.axes2,'reset');cla(handles.axes3,'reset');clearclear allclcclose(gcbf)%--------------------------------------------------------------------------------------------------------------------------------------------------% --- load image over IP CAMERA   Executes on button press in pushbutton19.function pushbutton19_Callback(hObject, eventdata, handles)global imagen0 imagen1 imagen2 imagen3 imagen4 imagen5 ss%RESETING THE IMAGE DURING LOADING AND RELOADINGimagen0=[];imagen1=[];imagen2=[];imagen3=[];imagen4=[];imagen5=[];set(handles.sliderNum,'value',0);set(handles.imadjust_Slider,'value',0);set(handles.slider2,'value',0.5);set(handles.textNum,'string',0);%set sliderNumset(handles.text5,'string',0.5);%set slider2     cla(handles.axes1,'reset');     cla(handles.axes3,'reset');     cla(handles.axes2,'reset');    % LOADING THE IMAGE over        IP camera    connector on newpass    url = 'http://192.168.43.70:8080/photoaf.jpg';    ss  = imread(url);    fh = image(ss);    ss  = imread(url);    set(fh,'CData',ss);    imagen0=ss;%     if isempty(imagen0)%      errordlg('Image not Loaded. Please check the network connection or load in the normal mode','Error');%     else    title('Loaded IMAGE Using IP camera');    axes(handles.axes1)    imshow(imagen0)    imagen1=imagen0;    cla(handles.axes3,'reset');    cla(handles.axes2,'reset');%     end%--------------------------------------------------------------------------------------------------------------------------------------------------% ---loads image button1.function pushbutton1_Callback(hObject, eventdata, handles)% hObject    handle to pushbutton1 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)global imagen0 imagen1 imagen2 imagen3 imagen4 imagen5%RESETING THE IMAGE DURING LOADING AND RELOADINGimagen0=[];imagen1=[];imagen2=[];imagen3=[];imagen4=[];imagen5=[];set(handles.sliderNum,'value',0);set(handles.imadjust_Slider,'value',0);set(handles.slider2,'value',0.5);set(handles.textNum,'string',0);%set sliderNumset(handles.text5,'string',0.5);%set slider2     cla(handles.axes1,'reset');     cla(handles.axes3,'reset');       cla(handles.axes2,'reset');     % LOADING THE IMAGE by browzing system    [filename,pathname]=uigetfile({'*.jpg';'*.png';'*.bmp';'.gif';'.giff'},'File Selector');    img_path=strcat(pathname,filename);    imagen0=imread(img_path);    title('Loaded IMAGE');    axes(handles.axes1)    imshow(imagen0)    cla(handles.axes3,'reset');    cla(handles.axes2,'reset');    imagen1=imagen0;%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- Reset button button press in pushbutton17.function pushbutton17_Callback(hObject, eventdata, handles)% hObject    handle to pushbutton17 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)global imagen0 imagen1 imagen2 imagen3 imagen4 imagen5imagen0=[];imagen1=[];imagen2=[];imagen3=[];imagen4=[];imagen5=[];set(handles.sliderNum,'value',0);set(handles.slider2,'value',0.5);set(handles.textNum,'string',0);%set sliderNumset(handles.text5,'string',0.5);%set slider2     cla(handles.axes1,'reset');     cla(handles.axes2,'reset');     cla(handles.axes3,'reset');%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- crop image button2.function pushbutton2_Callback(hObject, eventdata, handles)% hObject    handle to pushbutton2 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)global imagen0 if isempty(imagen0)     errordlg('Image not Loaded. Please click on the Load Image Button','Error'); else    title('IMAGE for CROPPING');    axes(handles.axes1)    imshow(imagen0);    cla(handles.axes3,'reset');    cla(handles.axes2,'reset');    [imagen0, rect] = imcrop(imagen0);    title('Cropped IMAGE');    axes(handles.axes1)    imshow(imagen0);    cla(handles.axes3,'reset');    cla(handles.axes2,'reset'); end%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- rotate anticlock wisse 90 pushbutton6. function pushbutton6_Callback(hObject, eventdata, handles) global imagen0       if isempty(imagen0)           errordlg('Image not Loaded. Please click on the Load Image Button','Error');       else           imagen0=imrotate(imagen0,(90),'bilinear');           axes(handles.axes1)           imshow(imagen0);            cla(handles.axes3,'reset');            cla(handles.axes2,'reset');       end            % --- clock wise rotate 90 pushbutton8.            function pushbutton8_Callback(hObject, eventdata, handles)            global imagen0               if isempty(imagen0)           errordlg('Image not Loaded. Please click on the Load Image Button','Error');       else                    imagen0=imrotate(imagen0,(-90),'bilinear');                    axes(handles.axes1)                    imshow(imagen0);                     cla(handles.axes3,'reset');                     cla(handles.axes2,'reset');               end            % --- rotate anticlock wisse 10  pushbutton9.            function pushbutton9_Callback(hObject, eventdata, handles)            global imagen0               if isempty(imagen0)           errordlg('Image not Loaded. Please click on the Load Image Button','Error');       else                    imagen0=imrotate(imagen0,(2),'bilinear');                    axes(handles.axes1)                    imshow(imagen0);                    cla(handles.axes3,'reset');                     cla(handles.axes2,'reset');               end            % --- clock wise rotation 10 pushbutton10.            function pushbutton10_Callback(hObject, eventdata, handles)            global imagen0               if isempty(imagen0)           errordlg('Image not Loaded. Please click on the Load Image Button','Error');       else                    imagen0=imrotate(imagen0,(-2),'bilinear');                    axes(handles.axes1)                    imshow(imagen0);                    cla(handles.axes3,'reset');                     cla(handles.axes2,'reset');               end%-----------------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- to Reload: save org cropped and rot image and reappear,  press in pushbutton16.function pushbutton16_Callback(hObject, eventdata, handles)global imagen0 imagen1 imagen2 imagen3 imagen4 imagen5imagen2=imagen1;%set 1 as default, 0 is cropped img% imagen2=[];%set 2(empty)imagen3=[];%set 3 emptyimagen4=[];%set4 all functions image as default(empty)imagen5=[];%set ocr as empty   if isempty(imagen0)           errordlg('Image not Loaded. Please click on the Load Image Button','Error');   else       imagen1=[];    imagen2=[];    imagen3=[];    imagen4=[];    imagen5=[];    set(handles.sliderNum,'value',0);    set(handles. imadjust_Slider,'value',0.07);    set(handles.slider2,'value',0.5);    set(handles.textNum,'string',0);%set sliderNum    set(handles.text5,'string',0.5);%set slider2     cla(handles.axes1,'reset');     cla(handles.axes2,'reset');     cla(handles.axes3,'reset');        title('IMAGE');        axes(handles.axes1)        imshow(imagen0);        cla(handles.axes3,'reset');        cla(handles.axes2,'reset');   end%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- grey scale conversion slider movement.function imadjust_Slider_Callback(hObject, eventdata, handles)global imagen0 imagen1 imagen2 set_invertimagen1=imagen0;imagen2=imagen1;if isempty(imazgen1)    errordlg('Image not Loaded. Please click on the Load Image Button','Error');else    %%    %   for x = 1:10    %       disp(x)    %   end    if size(imagen2,3)==3        imagen2=rgb2gray(imagen2);        axes(handles.axes1)        imshow(imagen2)        title ('GREY IMAGE');        % FOR REFERENCE FOR IMAGE        axes(handles.axes2)        imshow(imagen0)        cla(handles.axes3,'reset');        title ('CROPPED IMAGE FOR REFERENCE');        a=get(hObject,'Value');        imagen2=imadjust(imagen2,[a,1],[]);        axes(handles.axes1)        imshow(imagen2)        title ('GREY IMAGE');        cla(handles.axes3,'reset');        set(handles.text8,'String',num2str(a));    endend% --- Executes during object creation, after setting all properties.function imadjust_Slider_CreateFcn(hObject, eventdata, handles)if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))    set(hObject,'BackgroundColor',[.9 .9 .9]);end%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- for threshold to black &white  image  on slider movement.function slider2_Callback(hObject, eventdata, handles)% Hints: get(hObject,'Value') returns position of slider get(hObject,'Min') and get(hObject,'Max') to determine range of sliderglobal imagen0 imagen1 imagen2 imagen3  Thresh2BW radvalThresh2BW = get(hObject,'Value'); % fetch value of slider for bw threshif isempty(imagen0)    errordlg('Image not Loaded. Please click on the Load Image Button','Error');else    if isempty(imagen2)         errordlg('Please convert the image to GREY scale image, Click on the Grey scale scroll bar','Error');    else            imagen3 = imagen2;            % ----------------------Convert to BW--------------------------------------            %threshold = graythresh(imagen); automatic threshhold calculator            imagen3 =~im2bw(imagen3,Thresh2BW);            %---inver the bw image-----            if radval == 1  % executed only if radio button is set and used only for a chassis and engine number                 imagen3 = ~imagen3;                 imagen3 = 1-imagen3;                 imagen3 = (imagen3 == 0);            end            axes(handles.axes1)            imshow(imagen3);            title('B/W converted image (binary image)');            cla(handles.axes3,'reset');            %% Label connected components            [L Ne]=bwlabel(imagen3);            %% Measure properties of image regions            propied=regionprops(L,'BoundingBox');            hold on            %% Plot Bounding Box            for n=1:size(propied,1)                rectangle('Position',propied(n).BoundingBox,'EdgeColor','g','LineWidth',2)            end            hold off            % to display the valuse of slider in textNum static text ...             set(handles.text5,'String',num2str(Thresh2BW));    endend% --- Executes during object creation, after setting all properties.function slider2_CreateFcn(hObject, eventdata, handles)% Hint: slider controls usually have a light gray background.if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))    set(hObject,'BackgroundColor',[.9 .9 .9]);end%--------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- slider to fetch the threshold for noise removal slider movement.function sliderNum_Callback(hObject, eventdata, handles)% Hints: get(hObject,'Value') returns position of slider%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider global  imagen0 imagen2 imagen3 imagen4 imagen5 imagen4 = imagen3;if isempty(imagen0)    errordlg('Image not Loaded. Please click on the Load Image Button','Error');else    if isempty(imagen2)         errordlg('Please convert the image to GREY scale image, Click on the Grey scale scroll bar','Error');    else                 if isempty(imagen4)                           errordlg('Please convert the image to B/W, Click on the B/W scroll bar','Error');                       else                             Thresh_Noise = get(hObject,'Value');                             Thresh_Noise= floor( Thresh_Noise);                             assignin('base','float_Thresh_N',Thresh_Noise);                             % to display the valuse of slider in textNum static text ...                             set(handles.textNum,'String',num2str(Thresh_Noise));                            % Thresh_N = typecast(float_Thresh_Noise =Thresh_Noise;                            imagen4 = bwareaopen(imagen4,Thresh_Noise);                            axes(handles.axes1)                            imshow(imagen4);                            title('NOISE FREE IMAGE');                        %% Label connected components                            [L Ne]=bwlabel(imagen4);                        %% Measure properties of image regions                            propied=regionprops(L,'BoundingBox');                            hold on                        %% Plot Bounding Box                            for n=1:size(propied,1)                                rectangle('Position',propied(n).BoundingBox,'EdgeColor','g','LineWidth',2)                            end                            hold off                            imagen5=imagen4; % settig imagen5 to be used by OCR                 end        endend% do not disturb below function% create function for slidet to get threshold for noise removal.% --- Executes during object creation, after setting all properties.function sliderNum_CreateFcn(hObject, eventdata, handles)% Hint: slider controls usually have a light gray background.if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))    set(hObject,'BackgroundColor',[.9 .9 .9]);end%-----------------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- Extract the char using OCR pushbutton11.function pushbutton11_Callback(hObject, eventdata, handles)global imagen0 imagen2 imagen4 imagen5 templates_fileload templates_fileif isempty(imagen0)    errordlg('Image not Loaded. Please click on the Load Image Button','Error');else    if isempty(imagen2)         errordlg('Please convert the image to GREY scale image, Click on the Grey scale scroll bar','Error');    else                 if isempty(imagen4)                           errordlg('Please convert the image to B/W, Click on the B/W scroll bar','Error');                       else                                    if isempty(imagen5)                                               errordlg('Please Perform Noise removal, Click on the Noise removal scroll bar','Error');                                           else                                                re=imagen5;                                                word=[ ];                                                %---------------------Opens text.txt as file for write---------------------%                                           here      fid = fopen('text.txt', 'wt');                                                % Compute the number of letters in template file                                                num_letras=size(templates_file,2);                                                while 1                                                    %Fcn 'lines' separate lines in text                                                    [fl re]=lines(re);                                                    imgn=fl;                                                    %Uncomment line below to see lines one by one                                                    axes(handles.axes2)                                                    imshow(fl);                                    %               pause(0.1)                                                    %-----------------------------------------------------------------                                                    % Label and count connected components                                                    [L Ne] = bwlabel(imgn);                                                    for n=1:Ne                                                        [r,c] = find(L==n);                                                        % Extract letter                                                        n1=imgn(min(r):max(r),min(c):max(c));                                                        % Resize letter (same size of template)                                                        img_r=imresize(n1,[ 168 294]);                                                        %Uncomment line below to see letters one by one                                                        axes(handles.axes3)                                                        imshow(img_r);                                                        %NEEDED IF                                                        %GENERATING TEMP                                                        %count = 1;                                                            if 	n==1                                                                imwrite (img_r, 'C:\projects\refbmp\new1.bmp');                                                        elseif 	n==2                                                            imwrite (img_r, 'C:\projects\refbmp\new2.bmp');                                                        elseif 	n==3                                                            imwrite (img_r, 'C:\projects\refbmp\new3.bmp');                                                        elseif 	n==4                                                            imwrite (img_r, 'C:\projects\refbmp\new4.bmp');                                                        elseif 	n==5                                                            imwrite (img_r, 'C:\projects\refbmp\new5.bmp');                                                        elseif 	n==6                                                            imwrite (img_r, 'C:\projects\refbmp\new6.bmp');                                                        elseif 	n==7                                                            imwrite (img_r, 'C:\projects\refbmp\new7.bmp');                                                        elseif 	n==8                                                            imwrite (img_r, 'C:\projects\refbmp\new8.bmp');                                                        elseif 	n==9                                                            imwrite (img_r, 'C:\projects\refbmp\new9.bmp');                                                        elseif 	n==10                                                            imwrite (img_r, 'C:\projects\refbmp\new10.bmp');                                                        elseif 	n==11                                                            imwrite (img_r, 'C:\projects\refbmp\new11.bmp');                                                        elseif 	n==12                                                            imwrite (img_r, 'C:\projects\refbmp\new12.bmp');                                                        elseif 	n==13                                                            imwrite (img_r, 'C:\projects\refbmp\new13.bmp');                                                        elseif 	n==14                                                            imwrite (img_r, 'C:\projects\refbmp\new14.bmp');                                                        elseif 	n==15                                                            imwrite (img_r, 'C:\projects\refbmp\new15.bmp');                                                        elseif 	n==16                                                            imwrite (img_r, 'C:\projects\refbmp\new16.bmp');                                                        elseif 	n==17                                                            imwrite (img_r, 'C:\projects\refbmp\new17.bmp');                                                        elseif 	n==18                                                            imwrite (img_r, 'C:\projects\refbmp\new18.bmp');                                                        elseif 	n==19                                                            imwrite (img_r, 'C:\projects\refbmp\new19.bmp');                                                          else 	n==20                                                              imwrite (img_r, 'C:\projects\refbmp\new20.bmp');                                                            end                                                        %imwrite (img_r, 'C:\projects\refbmp\A20.bmp');                                    %                   pause(0.1)                                                        %-------------------------------------------------------------------                                                        % Call fcn to convert image to text                                                        letter=read_letter(img_r,num_letras);                                                        % Letter concatenation                                                        word=[word letter];                                                    end                                                    %fprintf(fid,'%s\n',lower(word));%Write 'word' in text file (lower)%                                              here       fprintf(fid,'%s\n','extractedTheBones');%Write 'word' in text file (upper)                                                    % Clear 'word' variable                                                 % here   word=[ ];                                                    %*When the sentences finish, breaks the loop                                                    if isempty(re)  %See variable 're' in Fcn 'lines'                                                        break                                                    end                                                end%                                 here                fclose(fid);                                                %Open 'text.txt' file                                   %here             winopen('text.txt')                                                %imshow(realimg);                                                %clear all                                    end                 end    endend%  dos('start http://127.0.0.1/Vehicle_Regestration_Server/');%%-----------------------------------------------------------------------------------------------------------------------------------------------------------%--------------------------------------------------------------------------------------------------------------------------------------------------% --- Executes during object deletion, before destroying properties.function sliderNum_DeleteFcn(hObject, eventdata, handles)% hObject    handle to sliderNum (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)% --------------------------------------------------------------------% --- RADIO button press TO selected if the image is a chassis or a engine% number  in radiobutton5. || not to be selected for number plate or light% color engine numbersfunction radiobutton5_Callback(hObject, eventdata, handles)% hObject    handle to radiobutton5 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)% Hint: get(hObject,'Value') returns toggle state of radiobutton5global radval;radval = get(hObject,'Value');% --------------------------------------------------------------------% --------------------------------------------------------------------function Untitled_1_Callback(hObject, eventdata, handles)% hObject    handle to Untitled_1 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)% --- Executes during object deletion, before destroying properties.function figure1_DeleteFcn(hObject, eventdata, handles)% hObject    handle to figure1 (see GCBO)% eventdata  reserved - to be defined in a future version of MATLAB% handles    structure with handles and user data (see GUIDATA)clearclear allclcclose(gcbf)% --- Creates and returns a handle to the GUI figure. function h1 = MyGui_export_LayoutFcn(policy)% policy - create a new figure or use a singleton. 'new' or 'reuse'.persistent hsingleton;if strcmpi(policy, 'reuse') & ishandle(hsingleton)    h1 = hsingleton;    return;endload MyGui_export.matappdata = [];appdata.GUIDEOptions = mat{1};appdata.lastValidTag = 'figure1';appdata.GUIDELayoutEditor = [];appdata.initTags = struct(...    'handle', [], ...    'tag', 'figure1');h1 = figure(...'PaperUnits','centimeters',...'Units','characters',...'Position',[103.8 15.0769230769231 250.6 46.3846153846154],...'Visible','on',...'Color',[0.8 0.8 1],...'IntegerHandle','off',...'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...'MenuBar','none',...'Name','MyGui',...'NumberTitle','off',...'Tag','figure1',...'UserData',[],...'PaperPosition',get(0,'defaultfigurePaperPosition'),...'PaperSize',[20.99999864 29.69999902],...'PaperType','A4',...'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...'ScreenPixelsPerInchMode','manual',...'HandleVisibility','callback',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'uipanel6';h2 = uibuttongroup(...'Parent',h1,...'FontUnits','points',...'Units','normalized',...'HighlightColor',[0.96078431372549 0.92156862745098 0.92156862745098],...'Title','Image panel',...'Tag','uipanel6',...'Clipping','off',...'Position',[0.359138068635275 0.296849087893864 0.438946528332003 0.535655058043118],...'FontSize',10,...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'axes1';h3 = axes(...'Parent',h2,...'FontUnits',get(0,'defaultaxesFontUnits'),...'Units',get(0,'defaultaxesUnits'),...'CameraPosition',[0.5 0.5 9.16025403784439],...'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...'CameraTarget',[0.5 0.5 0.5],...'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...'CameraViewAngle',6.60861036031192,...'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...'AmbientLightColor',[0.945098039215686 0.968627450980392 0.949019607843137],...'PlotBoxAspectRatio',[1 0.431535269709544 0.431535269709544],...'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...'ColormapMode',get(0,'defaultaxesColormapMode'),...'Alphamap',[0 0.0159 0.0317 0.0476 0.0635 0.0794 0.0952 0.1111 0.127 0.1429 0.1587 0.1746 0.1905 0.2063 0.2222 0.2381 0.254 0.2698 0.2857 0.3016 0.3175 0.3333 0.3492 0.3651 0.381 0.3968 0.4127 0.4286 0.4444 0.4603 0.4762 0.4921 0.5079 0.5238 0.5397 0.5556 0.5714 0.5873 0.6032 0.619 0.6349 0.6508 0.6667 0.6825 0.6984 0.7143 0.7302 0.746 0.7619 0.7778 0.7937 0.8095 0.8254 0.8413 0.8571 0.873 0.8889 0.9048 0.9206 0.9365 0.9524 0.9683 0.9841 1],...'AlphamapMode',get(0,'defaultaxesAlphamapMode'),...'Layer','top',...'GridLineStyle','none',...'MinorGridLineStyle','none',...'XTick',[],...'XTickLabel',[],...'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...'YTick',[],...'YTickLabel',[],...'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...'ZTick',[],...'Color',[0.862745098039216 0.862745098039216 0.862745098039216],...'CameraMode',get(0,'defaultaxesCameraMode'),...'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...'XRulerMode',get(0,'defaultaxesXRulerMode'),...'YRulerMode',get(0,'defaultaxesYRulerMode'),...'ZRulerMode',get(0,'defaultaxesZRulerMode'),...'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...'Tag','axes1',...'Position',[0.032967032967033 0.0723684210526316 0.943223443223443 0.822368421052631],...'ActivePositionProperty','position',...'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...'LooseInset',[0.206869565217391 0.161280193236715 0.151173913043478 0.109963768115942],...'SortMethod','childorder',...'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...'Clipping','off',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );h4 = get(h3,'title');set(h4,...'Parent',h3,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.5000005111325 1.00801282051282 0.500000000000007],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','Axes Title',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h5 = get(h3,'xlabel');set(h5,...'Parent',h3,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.500000476837158 -0.0170940170940171 1.00000000000001],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','top',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','front',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h6 = get(h3,'ylabel');set(h6,...'Parent',h3,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[-0.00737667127708621 0.500000476837158 1.00000000000001],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',90,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','front',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h7 = get(h3,'zlabel');set(h7,...'Parent',h3,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0 0 0],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','right',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','middle',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','off',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');appdata = [];appdata.lastValidTag = 'text9';h8 = uicontrol(...'Parent',h1,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','GRAY',...'Style','text',...'Position',[0.189146049481245 0.776119402985075 0.0407023144453312 0.0232172470978441],...'Children',[],...'Tag','text9',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'text10';h9 = uicontrol(...'Parent',h1,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','B/W',...'Style','text',...'Position',[0.237031125299282 0.777777777777778 0.0407023144453312 0.0232172470978441],...'Children',[],...'Tag','text10',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'text11';h10 = uicontrol(...'Parent',h1,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','NOISE REMOVAL',...'Style','text',...'Position',[0.28731045490822 0.777777777777778 0.0407023144453312 0.0232172470978441],...'Children',[],...'Tag','text11',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'uipanel2';h11 = uipanel(...'Parent',h1,...'FontUnits',get(0,'defaultuipanelFontUnits'),...'Units',get(0,'defaultuipanelUnits'),...'Title','Rotate functions',...'Tag','uipanel2',...'Clipping','off',...'Position',[0.837190742218675 0.419568822553897 0.119712689545092 0.412935323383085],...'FontSize',get(0,'defaultuipanelFontSize'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton9';h12 = uicontrol(...'Parent',h11,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Anti-clockwise',... 2''',...'Position',[0.11622760800843 0.559829059829061 0.776923076923077 0.166666666666667],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton9_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton9',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton10';h13 = uicontrol(...'Parent',h11,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Clockwise', ... 2''',...'Position',[0.123919915700738 0.337606837606838 0.776923076923077 0.166666666666667],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton10_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton10',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton8';h14 = uicontrol(...'Parent',h11,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Clockwise',... 90''',...'Position',[0.131612223393045 0.119658119658119 0.776923076923077 0.166666666666667],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton8_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton8',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton6';h15 = uicontrol(...'Parent',h11,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Anti-clockwise',... 90''',...'Position',[0.11622760800843 0.777777777777778 0.776923076923077 0.166666666666667],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton6_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton6',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'uipanel3';h16 = uipanel(...'Parent',h1,...'FontUnits',get(0,'defaultuipanelFontUnits'),...'Units',get(0,'defaultuipanelUnits'),...'Title','Edit Panel',...'Tag','uipanel3',...'Clipping','off',...'Position',[0.179249800478851 0.0815307820299501 0.160642570281124 0.752079866888519],...'FontSize',get(0,'defaultuipanelFontSize'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'textNum';h17 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','0',...'Style','text',...'Position',[0.691257172370937 0.0213939898254439 0.234234234234234 0.0289256198347107],...'Children',[],...'Tag','textNum',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'text5';h18 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','0.5',...'Style','text',...'Position',[0.379276185710942 0.0216162036424155 0.234234234234234 0.0289256198347107],...'Children',[],...'Tag','text5',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'text8';h19 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','0',...'Style','text',...'Position',[0.0692824804499932 0.015195642718006 0.234234234234234 0.0289256198347107],...'Children',[],...'Tag','text8',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'sliderNum';h20 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'Max',30000,...'String',{  'Slider' },...'Style','slider',...'Position',[0.746192893401015 0.0640732265446224 0.121827411167513 0.88558352402746],...'BackgroundColor',[0.9 0.9 0.9],...'Callback',@(hObject,eventdata)MyGui_export('sliderNum_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'ButtonDownFcn',@(hObject,eventdata)MyGui_export('sliderNum_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)MyGui_export('sliderNum_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...'Tag','sliderNum');appdata = [];appdata.lastValidTag = 'imadjust_Slider';h21 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'Max',0.999999999,...'String',{  'Slider' },...'Style','slider',...'Position',[0.121827411167513 0.0663615560640732 0.142131979695431 0.88558352402746],...'BackgroundColor',[0.9 0.9 0.9],...'Callback',@(hObject,eventdata)MyGui_export('imadjust_Slider_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)MyGui_export('imadjust_Slider_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...'Tag','imadjust_Slider');appdata = [];appdata.lastValidTag = 'slider2';h22 = uicontrol(...'Parent',h16,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String',{  'Slider' },...'Style','slider',...'Value',0.5,...'Position',[0.431472081218274 0.0663615560640732 0.126903553299492 0.887871853546911],...'BackgroundColor',[0.9 0.9 0.9],...'Callback',@(hObject,eventdata)MyGui_export('slider2_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)MyGui_export('slider2_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...'Tag','slider2');appdata = [];appdata.lastValidTag = 'uipanel4';h23 = uipanel(...'Parent',h1,...'FontUnits',get(0,'defaultuipanelFontUnits'),...'Units',get(0,'defaultuipanelUnits'),...'Title','Return Functions',...'Tag','uipanel4',...'Clipping','off',...'Position',[0.837190742218675 0.0812603648424544 0.119712689545092 0.30514096185738],...'FontSize',get(0,'defaultuipanelFontSize'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton16';h24 = uicontrol(...'Parent',h23,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Reload Cropped Image',...'Position',[0.0479452054794521 0.658682634730539 0.883561643835616 0.281437125748503],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton16_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton16',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton17';h25 = uicontrol(...'Parent',h23,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Reset',...'Position',[0.0547945205479452 0.383233532934132 0.883561643835616 0.239520958083832],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton17_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton17',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton5';h26 = uicontrol(...'Parent',h23,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Exit',...'Position',[0.0616438356164384 0.0778443113772455 0.876712328767123 0.269461077844311],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton5_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton5',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'Untitled_1';h27 = uicontextmenu(...'Parent',h1,...'Callback',@(hObject,eventdata)MyGui_export('Untitled_1_Callback',hObject,eventdata,guidata(hObject)),...'Tag','Untitled_1',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'uipanel5';h28 = uipanel(...'Parent',h1,...'FontUnits',get(0,'defaultuipanelFontUnits'),...'Units',get(0,'defaultuipanelUnits'),...'Title','Control Panel',...'Tag','uipanel5',...'Clipping','off',...'Position',[0.0385542168674699 0.0815307820299501 0.122088353413655 0.753743760399335],...'FontSize',get(0,'defaultuipanelFontSize'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton1';h29 = uicontrol(...'Parent',h28,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Load Image',...'Position',[0.087248322147651 0.807339449541284 0.818791946308725 0.165137614678899],...'BackgroundColor',[0.905882352941176 0.905882352941176 0.905882352941176],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton1_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton1',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton2';h30 = uicontrol(...'Parent',h28,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Crop',...'Position',[0.087248322147651 0.412844036697248 0.825503355704698 0.174311926605505],...'BackgroundColor',[0.905882352941176 0.905882352941176 0.905882352941176],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton2_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton2',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'radiobutton5';h31 = uicontrol(...'Parent',h28,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Invert img',...'Style','radiobutton',...'Position',[0.0805369127516778 0.229357798165138 0.832214765100671 0.165137614678899],...'BackgroundColor',[0.905882352941176 0.905882352941176 0.905882352941176],...'Callback',@(hObject,eventdata)MyGui_export('radiobutton5_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','radiobutton5',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'pushbutton11';h32 = uicontrol(...'Parent',h28,...'FontUnits',get(0,'defaultuicontrolFontUnits'),...'Units','normalized',...'String','Extract',...'Position',[0.087248322147651 0.036697247706422 0.818791946308725 0.165137614678899],...'BackgroundColor',[0.905882352941176 0.905882352941176 0.905882352941176],...'Callback',@(hObject,eventdata)MyGui_export('pushbutton11_Callback',hObject,eventdata,guidata(hObject)),...'Children',[],...'Tag','pushbutton11',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'uipanel7';h33 = uipanel(...'Parent',h1,...'FontUnits',get(0,'defaultuipanelFontUnits'),...'Units',get(0,'defaultuipanelUnits'),...'HighlightColor',[0.984313725490196 0.968627450980392 0.968627450980392],...'Title','Segmented Image Panel',...'BackgroundColor',[0.945098039215686 0.968627450980392 0.949019607843137],...'Tag','uipanel7',...'Clipping','off',...'Position',[0.359138068635275 0.0812603648424544 0.438946528332003 0.194029850746269],...'FontSize',get(0,'defaultuipanelFontSize'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );appdata = [];appdata.lastValidTag = 'axes2';h34 = axes(...'Parent',h33,...'FontUnits',get(0,'defaultaxesFontUnits'),...'Units',get(0,'defaultaxesUnits'),...'CameraPosition',[0.5 0.5 9.16025403784439],...'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...'CameraTarget',[0.5 0.5 0.5],...'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...'CameraViewAngle',6.60861036031192,...'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...'AmbientLightColor',[0.96078431372549 0.92156862745098 0.92156862745098],...'PlotBoxAspectRatio',[1 0.194444444444444 0.194444444444444],...'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...'ColormapMode',get(0,'defaultaxesColormapMode'),...'Alphamap',[0 0.0159 0.0317 0.0476 0.0635 0.0794 0.0952 0.1111 0.127 0.1429 0.1587 0.1746 0.1905 0.2063 0.2222 0.2381 0.254 0.2698 0.2857 0.3016 0.3175 0.3333 0.3492 0.3651 0.381 0.3968 0.4127 0.4286 0.4444 0.4603 0.4762 0.4921 0.5079 0.5238 0.5397 0.5556 0.5714 0.5873 0.6032 0.619 0.6349 0.6508 0.6667 0.6825 0.6984 0.7143 0.7302 0.746 0.7619 0.7778 0.7937 0.8095 0.8254 0.8413 0.8571 0.873 0.8889 0.9048 0.9206 0.9365 0.9524 0.9683 0.9841 1],...'AlphamapMode',get(0,'defaultaxesAlphamapMode'),...'XTick',[],...'XTickLabel',[],...'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...'YTick',[],...'YTickLabel',[],...'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...'ZTick',[],...'Color',get(0,'defaultaxesColor'),...'CameraMode',get(0,'defaultaxesCameraMode'),...'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...'XRulerMode',get(0,'defaultaxesXRulerMode'),...'YRulerMode',get(0,'defaultaxesYRulerMode'),...'ZRulerMode',get(0,'defaultaxesZRulerMode'),...'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...'Tag','axes2',...'Position',[0.0293040293040293 0.11 0.60989010989011 0.72],...'ActivePositionProperty','position',...'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...'LooseInset',[0.282254237288136 0.278208333333334 0.206262711864407 0.1896875],...'FontSize',8,...'FontSizeMode',get(0,'defaultaxesFontSizeMode'),...'SortMethod','childorder',...'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );h35 = get(h34,'title');set(h35,...'Parent',h34,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.500000523705768 1.02747252747253 0.500000000000007],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','Axes Title',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h36 = get(h34,'xlabel');set(h36,...'Parent',h34,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.500000476837158 -0.0234432234432234 7.105427357601e-15],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','top',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','back',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h37 = get(h34,'ylabel');set(h37,...'Parent',h34,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[-0.00455840455840455 0.500000476837158 7.105427357601e-15],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',90,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','back',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h38 = get(h34,'zlabel');set(h38,...'Parent',h34,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0 0 0],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','right',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','middle',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','off',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');appdata = [];appdata.lastValidTag = 'axes3';h39 = axes(...'Parent',h33,...'FontUnits',get(0,'defaultaxesFontUnits'),...'Units',get(0,'defaultaxesUnits'),...'CameraPosition',[0.5 0.5 9.16025403784439],...'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...'CameraTarget',[0.5 0.5 0.5],...'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...'CameraViewAngle',6.60861036031192,...'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...'PlotBoxAspectRatio',[1 0.413636363636364 0.413636363636364],...'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...'ColormapMode',get(0,'defaultaxesColormapMode'),...'Alphamap',[0 0.0159 0.0317 0.0476 0.0635 0.0794 0.0952 0.1111 0.127 0.1429 0.1587 0.1746 0.1905 0.2063 0.2222 0.2381 0.254 0.2698 0.2857 0.3016 0.3175 0.3333 0.3492 0.3651 0.381 0.3968 0.4127 0.4286 0.4444 0.4603 0.4762 0.4921 0.5079 0.5238 0.5397 0.5556 0.5714 0.5873 0.6032 0.619 0.6349 0.6508 0.6667 0.6825 0.6984 0.7143 0.7302 0.746 0.7619 0.7778 0.7937 0.8095 0.8254 0.8413 0.8571 0.873 0.8889 0.9048 0.9206 0.9365 0.9524 0.9683 0.9841 1],...'AlphamapMode',get(0,'defaultaxesAlphamapMode'),...'XTick',[],...'XTickLabel',['0  ';'0.5';'1  '],...'YTick',[],...'YTickLabel',['0  ';'0.5';'1  '],...'ZTick',[],...'Color',get(0,'defaultaxesColor'),...'CameraMode',get(0,'defaultaxesCameraMode'),...'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...'XRulerMode',get(0,'defaultaxesXRulerMode'),...'YRulerMode',get(0,'defaultaxesYRulerMode'),...'ZRulerMode',get(0,'defaultaxesZRulerMode'),...'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...'Tag','axes3',...'Position',[0.695970695970696 0.11 0.287545787545788 0.72],...'ActivePositionProperty','position',...'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...'LooseInset',[0.427 0.273647540983606 0.312038461538461 0.186577868852459],...'FontSize',8,...'FontSizeMode',get(0,'defaultaxesFontSizeMode'),...'SortMethod','childorder',...'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );h40 = get(h39,'title');set(h40,...'Parent',h39,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.500002791664818 1.02747252747253 0.5],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','Axes Title',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h41 = get(h39,'xlabel');set(h41,...'Parent',h39,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0.500000476837159 -0.0234432234432234 0],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','top',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','back',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h42 = get(h39,'ylabel');set(h42,...'Parent',h39,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[-0.00969696969696932 0.500000476837158 0],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',90,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','center',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','bottom',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','back',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','on',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');h43 = get(h39,'zlabel');set(h43,...'Parent',h39,...'Units','data',...'FontUnits','points',...'DecorationContainer',[],...'DecorationContainerMode','auto',...'Color',[0 0 0],...'ColorMode','auto',...'Position',[0 0 0],...'PositionMode','auto',...'String',blanks(0),...'Interpreter','tex',...'Rotation',0,...'RotationMode','auto',...'FontName','Helvetica',...'FontSize',10,...'FontAngle','normal',...'FontWeight','normal',...'HorizontalAlignment','right',...'HorizontalAlignmentMode','auto',...'VerticalAlignment','middle',...'VerticalAlignmentMode','auto',...'EdgeColor','none',...'LineStyle','-',...'LineWidth',0.5,...'BackgroundColor','none',...'Margin',2,...'Clipping','off',...'Layer','middle',...'LayerMode','auto',...'FontSmoothing','on',...'FontSmoothingMode','auto',...'DisplayName',blanks(0),...'IncludeRenderer','on',...'IsContainer','off',...'IsContainerMode','auto',...'HelpTopicKey',blanks(0),...'ButtonDownFcn',blanks(0),...'BusyAction','queue',...'Interruptible','on',...'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...'DeleteFcn',blanks(0),...'Tag',blanks(0),...'HitTest','on',...'PickableParts','visible',...'PickablePartsMode','auto',...'DimensionNames',{  'X' 'Y' 'Z' },...'DimensionNamesMode','auto',...'XLimInclude','on',...'YLimInclude','on',...'ZLimInclude','on',...'CLimInclude','on',...'ALimInclude','on',...'Description','AxisRulerBase Label',...'DescriptionMode','auto',...'Visible','off',...'Serializable','on',...'HandleVisibility','off',...'TransformForPrintFcnImplicitInvoke','on',...'TransformForPrintFcnImplicitInvokeMode','auto');hsingleton = h1;% --- Set application data first then calling the CreateFcn. function local_CreateFcn(hObject, eventdata, createfcn, appdata)if ~isempty(appdata)   names = fieldnames(appdata);   for i=1:length(names)       name = char(names(i));       setappdata(hObject, name, getfield(appdata,name));   endendif ~isempty(createfcn)   if isa(createfcn,'function_handle')       createfcn(hObject, eventdata);   else       eval(createfcn);   endend% --- Handles default GUIDE GUI creation and callback dispatchfunction varargout = gui_mainfcn(gui_State, varargin)gui_StateFields =  {'gui_Name'    'gui_Singleton'    'gui_OpeningFcn'    'gui_OutputFcn'    'gui_LayoutFcn'    'gui_Callback'};gui_Mfile = '';for i=1:length(gui_StateFields)    if ~isfield(gui_State, gui_StateFields{i})        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));    elseif isequal(gui_StateFields{i}, 'gui_Name')        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];    endendnumargin = length(varargin);if numargin == 0    % MYGUI_EXPORT    % create the GUI only if we are not in the process of loading it    % already    gui_Create = true;elseif local_isInvokeActiveXCallback(gui_State, varargin{:})    % MYGUI_EXPORT(ACTIVEX,...)    vin{1} = gui_State.gui_Name;    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];    vin{3} = varargin{1};    vin{4} = varargin{end-1};    vin{5} = guidata(varargin{1}.Peer);    feval(vin{:});    return;elseif local_isInvokeHGCallback(gui_State, varargin{:})    % MYGUI_EXPORT('CALLBACK',hObject,eventData,handles,...)    gui_Create = false;else    % MYGUI_EXPORT(...)    % create the GUI and hand varargin to the openingfcn    gui_Create = true;endif ~gui_Create    % In design time, we need to mark all components possibly created in    % the coming callback evaluation as non-serializable. This way, they    % will not be brought into GUIDE and not be saved in the figure file    % when running/saving the GUI from GUIDE.    designEval = false;    if (numargin>1 && ishghandle(varargin{2}))        fig = varargin{2};        while ~isempty(fig) && ~ishghandle(fig,'figure')            fig = get(fig,'parent');        end                designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));    end            if designEval        beforeChildren = findall(fig);    end        % evaluate the callback now    varargin{1} = gui_State.gui_Callback;    if nargout        [varargout{1:nargout}] = feval(varargin{:});    else               feval(varargin{:});    end        % Set serializable of objects created in the above callback to off in    % design time. Need to check whether figure handle is still valid in    % case the figure is deleted during the callback dispatching.    if designEval && ishghandle(fig)        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');    endelse    if gui_State.gui_Singleton        gui_SingletonOpt = 'reuse';    else        gui_SingletonOpt = 'new';    end    % Check user passing 'visible' P/V pair first so that its value can be    % used by oepnfig to prevent flickering    gui_Visible = 'auto';    gui_VisibleInput = '';    for index=1:2:length(varargin)        if length(varargin) == index || ~ischar(varargin{index})            break;        end        % Recognize 'visible' P/V pair        len1 = min(length('visible'),length(varargin{index}));        len2 = min(length('off'),length(varargin{index+1}));        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1            if strncmpi(varargin{index+1},'off',len2)                gui_Visible = 'invisible';                gui_VisibleInput = 'off';            elseif strncmpi(varargin{index+1},'on',len2)                gui_Visible = 'visible';                gui_VisibleInput = 'on';            end        end    end        % Open fig file with stored settings.  Note: This executes all component    % specific CreateFunctions with an empty HANDLES structure.        % Do feval on layout code in m-file if it exists    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);    % this application data is used to indicate the running mode of a GUIDE    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is    % only used by actxproxy at this time.       setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);    if gui_Exported        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);        % make figure invisible here so that the visibility of figure is        % consistent in OpeningFcn in the exported GUI case        if isempty(gui_VisibleInput)            gui_VisibleInput = get(gui_hFigure,'Visible');        end        set(gui_hFigure,'Visible','off')        % openfig (called by local_openfig below) does this for guis without        % the LayoutFcn. Be sure to do it here so guis show up on screen.        movegui(gui_hFigure,'onscreen');    else        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);        % If the figure has InGUIInitialization it was not completely created        % on the last pass.  Delete this handle and try again.        if isappdata(gui_hFigure, 'InGUIInitialization')            delete(gui_hFigure);            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);        end    end    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));    end    % Set flag to indicate starting GUI initialization    setappdata(gui_hFigure,'InGUIInitialization',1);    % Fetch GUIDE Application options    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');    % Singleton setting in the GUI MATLAB code file takes priority if different    gui_Options.singleton = gui_State.gui_Singleton;    if ~isappdata(gui_hFigure,'GUIOnScreen')        % Adjust background color        if gui_Options.syscolorfig            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));        end        % Generate HANDLES structure and store with GUIDATA. If there is        % user set GUI data already, keep that also.        data = guidata(gui_hFigure);        handles = guihandles(gui_hFigure);        if ~isempty(handles)            if isempty(data)                data = handles;            else                names = fieldnames(handles);                for k=1:length(names)                    data.(char(names(k)))=handles.(char(names(k)));                end            end        end        guidata(gui_hFigure, data);    end    % Apply input P/V pairs other than 'visible'    for index=1:2:length(varargin)        if length(varargin) == index || ~ischar(varargin{index})            break;        end        len1 = min(length('visible'),length(varargin{index}));        if ~strncmpi(varargin{index},'visible',len1)            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end        end    end    % If handle visibility is set to 'callback', turn it on until finished    % with OpeningFcn    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');    if strcmp(gui_HandleVisibility, 'callback')        set(gui_hFigure,'HandleVisibility', 'on');    end    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)        % Handle the default callbacks of predefined toolbar tools in this        % GUI, if any        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure);                 % Update handle visibility        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);        % Call openfig again to pick up the saved visibility or apply the        % one passed in from the P/V pairs        if ~gui_Exported            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);        elseif ~isempty(gui_VisibleInput)            set(gui_hFigure,'Visible',gui_VisibleInput);        end        if strcmpi(get(gui_hFigure, 'Visible'), 'on')            figure(gui_hFigure);                        if gui_Options.singleton                setappdata(gui_hFigure,'GUIOnScreen', 1);            end        end        % Done with GUI initialization        if isappdata(gui_hFigure,'InGUIInitialization')            rmappdata(gui_hFigure,'InGUIInitialization');        end        % If handle visibility is set to 'callback', turn it on until        % finished with OutputFcn        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');        if strcmp(gui_HandleVisibility, 'callback')            set(gui_hFigure,'HandleVisibility', 'on');        end        gui_Handles = guidata(gui_hFigure);    else        gui_Handles = [];    end    if nargout        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);    else        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);    end    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);    endendfunction gui_hFigure = local_openfig(name, singleton, visible)% openfig with three arguments was new from R13. Try to call that first, if% failed, try the old openfig.if nargin('openfig') == 2    % OPENFIG did not accept 3rd input argument until R13,    % toggle default figure visible to prevent the figure    % from showing up too soon.    gui_OldDefaultVisible = get(0,'defaultFigureVisible');    set(0,'defaultFigureVisible','off');    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);    set(0,'defaultFigureVisible',gui_OldDefaultVisible);else    % Call version of openfig that accepts 'auto' option"    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  %     %workaround for CreateFcn not called to create ActiveX%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    %         for i=1:length(peers)%             if isappdata(peers(i),'Control')%                 actxproxy(peers(i));%             end            %         endendfunction result = local_isInvokeActiveXCallback(gui_State, varargin)try    result = ispc && iscom(varargin{1}) ...             && isequal(varargin{1},gcbo);catch    result = false;endfunction result = local_isInvokeHGCallback(gui_State, varargin)try    fhandle = functions(gui_State.gui_Callback);    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...             (ischar(varargin{1}) ...             && isequal(ishghandle(varargin{2}), 1) ...             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );catch    result = false;end